syntax = "proto2";
package service.v1;

service BrongnalService {
	rpc RegisterPreKeyBundle (RegisterPreKeyBundleRequest) returns (RegisterPreKeyBundleResponse);
	rpc RequestPreKeys (RequestPreKeysRequest) returns (PreKeyBundle);
	rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);
	rpc RetrieveMessages (RetrieveMessagesRequest) returns (stream Message);
}

message SignedPreKey {
	// X25519 public key
	optional bytes pre_key = 1;

	// ED25519 signature
	optional bytes signature = 2;
}

message SignedPreKeys {
	// X25519 public keys
	repeated bytes pre_keys = 1;

	// ED25519 signature
	optional bytes signature = 2;
}

message RegisterPreKeyBundleRequest {
	// Human readable string
	optional string identity = 1;

	// ED25519 public key
	optional bytes identity_key = 2;

	optional SignedPreKey signed_pre_key = 3;

	optional SignedPreKeys one_time_key_bundle = 4;
}

message RegisterPreKeyBundleResponse {
	optional uint32 num_keys = 1;
}

message RequestPreKeysRequest {
	// Human readable string
	optional string identity = 1;
}

message PreKeyBundle {
	// ED25519 public key
	optional bytes identity_key = 1;

	// X25519 public key
	optional bytes one_time_key = 2;

	optional SignedPreKey signed_pre_key = 3;
}

message Message {
	optional string sender_identity = 1;

	// ED25519 public key
	optional bytes sender_identity_key = 2;

	// X25519 public key
	optional bytes ephemeral_key = 3;

	// X25519 public key
	optional bytes pre_key = 4;

	// X25519 public key (Optional)
	optional bytes one_time_key = 5;

	// binary
	optional bytes ciphertext = 6;
}

message SendMessageRequest {
	optional string recipient_identity = 1;
	optional Message message = 2;
}

message SendMessageResponse {}

message RetrieveMessagesRequest {
	optional string identity = 1;
}


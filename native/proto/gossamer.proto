syntax = "proto2";
package gossamer;

// provider is the human readable form of an identity.
service Gossamer {
	rpc Perform (ActionRequest) returns (ActionResponse);
}

message AppendKey {
	enum KeyPurpose {
		KEY_PURPOSE_UNKNOWN = 0;
		KEY_PURPOSE_IDENTITY_KEY = 1;
		KEY_PURPOSE_PRE_KEY = 2;
	}
	optional string provider = 1;
	optional bytes public_key = 2;
	optional KeyPurpose key_purpose = 3;
}

message RevokeKey {
	optional string provider = 1;
	optional bytes public_key = 2;
}

message Message {
	oneof action {
		AppendKey append_key = 1;
		RevokeKey revoke_key  = 2;
	}
}

message SignedMessage {
	// Serialized `Message`.
	optional bytes contents = 1;
	optional bytes signature = 2;
	optional string provider = 3;
	optional bytes public_key = 4;
}

message ActionRequest {
	optional SignedMessage message = 1;
}

message ActionResponse {}


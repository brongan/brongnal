syntax = "proto2";

package gossamer.v1;

// provider is the human readable form of an identity.
service GossamerService {
  rpc Action(ActionRequest) returns (ActionResponse);

  rpc GetLedger(GetLedgerRequest) returns (Ledger);
}

message AppendKey {
  enum KeyPurpose {
    KEY_PURPOSE_UNSPECIFIED = 0;
    KEY_PURPOSE_IDENTITY_KEY = 1;
    KEY_PURPOSE_PRE_KEY = 2;
  }
  optional bytes provider = 1;
  optional bytes public_key = 2;
  optional KeyPurpose key_purpose = 3;
}

message RevokeKey {
  optional bytes provider = 1;
  optional bytes public_key = 2;
}

message Message {
  oneof action {
    AppendKey append_key = 1;
    RevokeKey revoke_key = 2;
  }
}

message SignedMessage {
  // Serialized `Message`.
  optional bytes contents = 1;
  optional bytes signature = 2;
  optional bytes public_key = 3;
}

message ActionRequest {
  optional SignedMessage message = 1;
}

message ActionResponse {}

message GetLedgerRequest {}

message User {
  optional bytes provider = 1;
  repeated bytes public_keys = 2;
}

message Ledger {
  repeated User users = 1;
}

